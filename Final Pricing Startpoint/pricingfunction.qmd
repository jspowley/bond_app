---
title: "Pricing Function"
format: html
editor: visual
---

```{r}
fit_h_spline <- function(x, y, missing){
 
  yield_fn <- splinefun(x, y, method = "monoH.FC")
  missing <- unlist(missing)
  out <- data.frame(missing = as.numeric(missing), pred = yield_fn(as.numeric(missing)))
  output <- out %>% dplyr::pull(pred) %>% unlist() %>% as.numeric()
  names(output) <- out %>% dplyr::pull(missing)
  return(output)
}

library(lubridate)
library(dplyr)
library(tidyverse)

boot <- read_rds("boot.rds")
## Function 1
price_portfolio <- function(bond_data, today, boot_df) {
  today_parsed <- lubridate::ymd(today)
  ## Inner function
  price_bond <- function(face_value, coupon_rate, maturity_date) {
    
    maturity_date_parsed <- lubridate::ymd(maturity_date)
    
    cf_dates <- seq.Date(from = maturity_date_parsed, to = today_parsed, by = "-6 months") %>%
      tibble::as_tibble() %>%
      rename(date = value) %>%
      mutate(
        cf = dplyr::if_else(
          date == maturity_date_parsed,
          ## Final coupon and princ payment
          face_value + ((coupon_rate / 100) / 2) * face_value,
          (coupon_rate / 2)
        ),
        dtm = as.numeric(date - today_parsed)
      ) %>%
      arrange(date)
    
  ## DCF Interpolation
    strap_df <- tibble::as_tibble(
      fit_h_spline(
        x = boot_df$dtm,
        y = boot_df$dcf,
        missing = cf_dates$dtm
      )
    ) %>%
      mutate(dtm = cf_dates$dtm) %>%
      rename(dcf = value)
    
    cf_dates <- cf_dates %>%
      left_join(strap_df, by = "dtm") %>%
      mutate(pv = dcf * cf)
    
    bond_value <- sum(cf_dates$pv, na.rm = TRUE)
    return(bond_value)
  }
  ## perform inner bond pricing with rowwise function
  bond_data <- bond_data %>%
    rowwise() %>%
    mutate(bond_value = price_bond(face_value, coupon_rate, maturity_date)) %>%
    ungroup()

  portfolio_value <- sum(bond_data$bond_value, na.rm = TRUE)
  
  list(
    bond_data = bond_data,
    portfolio_value = portfolio_value
  )
}

my_bonds <- tibble::tibble(
  bond_id = c("Bond A", "Bond B", "Bond C"),
  face_value = c(100, 100, 100),
  coupon_rate = c(4, 3, 5),
  maturity_date = c("2029-01-13", "2027-01-25", "2032-05-10")
)

portfolio_results <- price_portfolio(my_bonds, Sys.Date(), boot)

portfolio_results$portfolio_value
portfolio_results$bond_data

```
